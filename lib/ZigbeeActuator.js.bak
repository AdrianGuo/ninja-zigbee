var util = require('util'),
    stream = require('stream'),
    helpers = require('./helpers');

module.exports = ZigbeeActuator
util.inherits(ZigbeeActuator,stream);

function ZigbeeActuator(logger,device) {

  // Features of this device
  this.readable = true;
  this.writeable = true;
  this.log = logger;

  // Ninja config
  this.V = 0;
  this.D = 5; //push button
  this.G = device.nwkAddr+device.endPoint.toString()+5;

  this._device = device;
  var self = this;

  setTimeout(function() {
    var dataObject = new Object();
    dataObject.on = false;
    dataObject.hue = 0
    dataObject.sat = 0
    dataObject.bri = 0;
    data = JSON.stringify(dataObject);
    // On next tick let the system know we exist
    self.emit('data', data) }
  , 1000);
};

/**
 * Change the state of the device (on/off).
 *
 * @param {Boolean} state true if on, false if off
 * @fires zigbee#data       `data` written to SRPC client
 */
ZigbeeActuator.prototype.setDeviceState = function(state) {
  var msg = new Buffer(15);
  var msgIdx;

  this.log.info('NinjaSmartPlug.prototype.setDeviceState++: nwk:' +this.zigbee.nwkAddr +' ep:' +this.zigbee.endPoint);

  //set SRPC len and CMD ID
  msg[SRPC_CMD_ID_POS] = RPCS_SET_DEV_STATE;
  msg[SRPC_CMD_LEN_POS] = 13;

  //set ptr to point to data
  msgIdx=2;

  //dstAddr.addrMode = Addr16Bit
  msg[msgIdx++] = Addr16Bit;
  //set afAddrMode_t nwk address
  msg[msgIdx++] = (this.zigbee.nwkAddr & 0xFF);
  msg[msgIdx++] = ((this.zigbee.nwkAddr & 0xFF00)>>8);
  //pad for an ieee addr size;
  msgIdx += 6;
  //set Ep
  msg[msgIdx++] = this.zigbee.endPoint;
  //pad out pan ID
  msgIdx+=2;

  this.log.info('ZigbeeActuator.prototype.setDeviceState: ' +state);

  //set State
  if(state){
      msg[msgIdx++] = 0xFF;
  } else {
      msg[msgIdx++] = 0;
  }
  this.zigbee.socket.write(msg);
};

ZigbeeActuator.prototype.write = function(data) {
  var dataObject = JSON.parse(data);
  
  this.log.debug('Can not Actuate this is an Actuator '+this._device.type);

  this.emit('data',data);

  return true;
};
ZigbeeActuator.prototype.end = function() {};
ZigbeeActuator.prototype.close = function() {};

